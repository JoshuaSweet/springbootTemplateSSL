## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# replace {database_name} with your actual database name
# replace {username} with actual database user name
# replace {password} with actual databae user password
spring.datasource.url = jdbc:mysql://localhost:3306/{database_name}?useSSL=true
spring.datasource.username = {username}
spring.datasource.password = {password}

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#ssl
# replace {keystore_file_name} with actual keystore file name
# replace {keystore_pw} with your actual keystore password
# replace {key_pw} with your actual key password
server.port = 443
server.ssl.key-store = src/main/resources/{keystore_file_name}
server.ssl.key-store-password = {keystore_pw}
server.ssl.key-password = {key_pw}
server.ssl.key-alias = tomcat
server.ssl.key-type = JKS

#logging
logging.level.root = WARN
logging.level.org.springframework.security = WARN
logging.level.org.springframework.web = WARN
logging.level.org.hibernate = DEBUG
logging.level.com.mysql = DEBUG
logging.file = mylogfile.log    
logging.pattern.file= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n